#BlueJ class context
comment0.target=DecorationGame
comment1.params=selectedRecipeIndex
comment1.target=DecorationGame(int)
comment10.params=t\ p0\ p1\ p2\ p3
comment10.target=double\ cubicBezier(double,\ double,\ double,\ double,\ double)
comment10.text=\r\n\ \ \ \ private\ boolean\ isNearCurve(Point\ p)\ {\r\n\ \ \ \ \ \ \ \ double\ t\ \=\ 0;\r\n\ \ \ \ \ \ \ \ while\ (t\ <\=\ 1.0)\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ double\ x\ \=\ Math.pow(1\ -\ t,\ 3)\ *\ bezierPoints[0].x\ +\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 3\ *\ Math.pow(1\ -\ t,\ 2)\ *\ t\ *\ bezierPoints[1].x\ +\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 3\ *\ (1\ -\ t)\ *\ Math.pow(t,\ 2)\ *\ bezierPoints[2].x\ +\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Math.pow(t,\ 3)\ *\ bezierPoints[3].x;\r\n\r\n\ \ \ \ \ \ \ \ \ \ \ \ double\ y\ \=\ Math.pow(1\ -\ t,\ 3)\ *\ bezierPoints[0].y\ +\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 3\ *\ Math.pow(1\ -\ t,\ 2)\ *\ t\ *\ bezierPoints[1].y\ +\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 3\ *\ (1\ -\ t)\ *\ Math.pow(t,\ 2)\ *\ bezierPoints[2].y\ +\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Math.pow(t,\ 3)\ *\ bezierPoints[3].y;\r\n\r\n\ \ \ \ \ \ \ \ \ \ \ \ if\ (p.distance(x,\ y)\ <\ 15)\ return\ true;\r\n\ \ \ \ \ \ \ \ \ \ \ \ t\ +\=\ 0.01;\r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ return\ false;\r\n}
comment11.params=p
comment11.target=boolean\ isNearCurve(java.awt.Point)
comment12.params=
comment12.target=boolean\ isWon()
comment13.params=
comment13.target=int\ getScore()
comment14.params=e
comment14.target=void\ keyPressed(java.awt.event.KeyEvent)
comment15.params=e
comment15.target=void\ mousePressed(java.awt.event.MouseEvent)
comment16.params=e
comment16.target=void\ mouseDragged(java.awt.event.MouseEvent)
comment17.params=e
comment17.target=void\ mouseReleased(java.awt.event.MouseEvent)
comment18.params=e
comment18.target=void\ keyReleased(java.awt.event.KeyEvent)
comment19.params=e
comment19.target=void\ keyTyped(java.awt.event.KeyEvent)
comment2.params=
comment2.target=int\ getSelectedRecipe()
comment20.params=e
comment20.target=void\ mouseMoved(java.awt.event.MouseEvent)
comment21.params=e
comment21.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment22.params=e
comment22.target=void\ mouseEntered(java.awt.event.MouseEvent)
comment23.params=e
comment23.target=void\ mouseExited(java.awt.event.MouseEvent)
comment24.params=args
comment24.target=void\ main(java.lang.String[])
comment3.params=imageName
comment3.target=void\ loadImages(java.lang.String)
comment4.params=image
comment4.target=void\ convertToGrayscale(java.awt.image.BufferedImage)
comment5.params=
comment5.target=void\ setupSimpleCurve()
comment5.text=\r\n\ \ \ \ private\ void\ setupBezierCurve()\ {\r\n\ \ \ \ \ \ \ \ bezierPoints\ \=\ new\ Point[]\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ new\ Point(100,\ 400),\r\n\ \ \ \ \ \ \ \ \ \ \ \ new\ Point(150,\ 300),\r\n\ \ \ \ \ \ \ \ \ \ \ \ new\ Point(250,\ 300),\r\n\ \ \ \ \ \ \ \ \ \ \ \ new\ Point(300,\ 400)\r\n\ \ \ \ \ \ \ \ };\r\n}
comment6.params=
comment6.target=void\ setupComplexCurve()
comment6.text=\r\n\ \ \ \ private\ void\ setupComplexCurve()\ {\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ int\ offsetX\ \=\ 30;\r\n\ \ \ \ \ \ \ \ int\ offsetY\ \=\ -20;\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ bezierPoints\ \=\ new\ Point[]\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ new\ Point(100\ +\ offsetX,\ 400\ +\ offsetY),\ \ \ //\ Start\r\n\r\n\ \ \ \ \ \ \ \ \ \ \ \ //\ Segment\ 1\r\n\ \ \ \ \ \ \ \ \ \ \ \ new\ Point(130\ +\ offsetX,\ 300\ +\ offsetY),\ \ \ //\ Control\ 1\r\n\ \ \ \ \ \ \ \ \ \ \ \ new\ Point(170\ +\ offsetX,\ 500\ +\ offsetY),\ \ \ //\ Control\ 2\r\n\ \ \ \ \ \ \ \ \ \ \ \ new\ Point(200\ +\ offsetX,\ 400\ +\ offsetY),\ \ \ //\ End\ of\ Segment\ 1\r\n\ \ \ \ \r\n\ \ \ \ \ \ \ \ \ \ \ \ //\ Segment\ 2\r\n\ \ \ \ \ \ \ \ \ \ \ \ new\ Point(230\ +\ offsetX,\ 300\ +\ offsetY),\ \ \ //\ Control\ 1\r\n\ \ \ \ \ \ \ \ \ \ \ \ new\ Point(270\ +\ offsetX,\ 500\ +\ offsetY),\ \ \ //\ Control\ 2\r\n\ \ \ \ \ \ \ \ \ \ \ \ new\ Point(300\ +\ offsetX,\ 400\ +\ offsetY),\ \ \ //\ End\ of\ Segment\ 2\r\n\ \ \ \ \r\n\ \ \ \ \ \ \ \ \ \ \ \ //\ Optional\ Segment\ 3\r\n\ \ \ \ \ \ \ \ \ \ \ \ new\ Point(330\ +\ offsetX,\ 300\ +\ offsetY),\r\n\ \ \ \ \ \ \ \ \ \ \ \ new\ Point(370\ +\ offsetX,\ 500\ +\ offsetY),\r\n\ \ \ \ \ \ \ \ \ \ \ \ new\ Point(400\ +\ offsetX,\ 400\ +\ offsetY)\r\n\ \ \ \ \ \ \ \ };\r\n}
comment7.params=p\ originX\ originY\ scale
comment7.target=java.awt.Point\ scalePoint(java.awt.Point,\ int,\ int,\ double)
comment8.params=g
comment8.target=void\ paintComponent(java.awt.Graphics)
comment9.params=g2\ pts
comment9.target=void\ drawBezier(java.awt.Graphics2D,\ java.awt.Point[])
comment9.text=\r\n\ \ \ \ private\ void\ drawBezier(Graphics2D\ g2,\ Point\ p0,\ Point\ p1,\ Point\ p2,\ Point\ p3)\ {\r\n\ \ \ \ \ \ \ \ CubicCurve2D\ curve\ \=\ new\ CubicCurve2D.Double(\r\n\ \ \ \ \ \ \ \ \ \ \ \ p0.x,\ p0.y,\ p1.x,\ p1.y,\r\n\ \ \ \ \ \ \ \ \ \ \ \ p2.x,\ p2.y,\ p3.x,\ p3.y\r\n\ \ \ \ \ \ \ \ );\r\n\ \ \ \ \ \ \ \ g2.draw(curve);\r\n}
numComments=25
